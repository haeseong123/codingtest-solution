// <문제 설명>
// 연구실에 있는 N 마리의 포켓몬 중 N/2 마리를 가져갈 수 있습니다.
// 포켓몬은 종류에 따라 번호를 붙여 구분합니다.
// 따라서 같은 종류의 포켓몬은 같은 번호를 가지고 있습니다.
// 예를 들어 연구실에 총 4마리의 포켓몬이 있고,
// 각 포켓몬의 종류 번호가 [3, 1, 2, 3]이라면
// 이는 3번 포켓몬 두 마리,
// 1번 포켓몬 한 마리
// 2번 포켓몬 한 마리가 있음을 나타냅니다.
// 이때. 4마리의 포켓몬 중 2마리를 고리는 방법은 아래와 같이 6가지가 있습니다.

// 첫 번째(3번), 두 번째(1번) 폰켓몬을 선택
// 첫 번째(3번), 세 번째(2번) 폰켓몬을 선택
// 첫 번째(3번), 네 번째(3번) 폰켓몬을 선택
// 두 번째(1번), 세 번째(2번) 폰켓몬을 선택
// 두 번째(1번), 네 번째(3번) 폰켓몬을 선택
// 세 번째(2번), 네 번째(3번) 폰켓몬을 선택

// 이때 첫 번째 포켓몬과 네 번째 포켓몬을 선택하는 방법은 한 종류의 포켓몬만 가질 수 있지만 다른 방법들은 모두 두 종류의 포켓몬을 가질 수 있습니다.
// 따라서 위 예시에서 가질 수 있는 포켓몬 종류 수의 최댓값은 2가 됩니다.

// 아래 매개변수가 주어질 때 가장 많은 종류의 포켓몬을 선택하는 경우의 포켓몬 종류 번호의 개수를 반환해 주세요.
// nums: N마리 포켓몬의 종류 번호가 담긴 배열

// <제한사항>
// nums는 포켓몬의 종류 번호가 담긴 1차원 배열입니다.
// nums의 길이(N)는 1 이상 10,000 이하의 자연수이며, 항상 짝수로 주어집니다.
// 포켓몬의 종류 번호는 1 이상 200,000 이하의 자연수로 나타냅니다.
// 가장 많은 종류의 포켓몬을 선택하는 방법이 여러 가지인 경우에도, 선택할 수 있는 포켓몬 종류 개수의 최댓값 하나만 반환하면 됩니다.

// <문제 풀이>
// 가져갈 수 있는 포켓몬 종류의 최댓값은 항상 N/2입니다.
// 하지만 포켓몬의 종류가 겹칠 경우 그보다 작을 수 있습니다.
// 작을 수 있는 경우를 생각해보면...
// min(포켓몬 종류의 수, N/2) 입니다.

function solution(nums) {
    return Math.min((new Set(nums)).size, nums.length / 2)
}